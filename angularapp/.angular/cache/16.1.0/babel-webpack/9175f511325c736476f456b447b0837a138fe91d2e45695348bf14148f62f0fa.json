{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CancellationService {\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.baseUrl = 'http://localhost:8080';\n  }\n  createCancellation(bookingId, cancellation) {\n    const url = `${this.baseUrl}/bookings/${bookingId}/cancellations`;\n    return this.httpclient.post(url, cancellation);\n  }\n  getAllCancellations(bookingId) {\n    const url = `${this.baseUrl}/bookings/${bookingId}/cancellations`;\n    return this.httpclient.get(url);\n  }\n  updateCancellation(bookingId, cancellationId, cancellation) {\n    const url = `${this.baseUrl}/bookings/${bookingId}/cancellations/${cancellationId}`;\n    return this.httpclient.put(url, cancellation);\n  }\n  deleteCancellation(bookingId, cancellationId) {\n    const url = `${this.baseUrl}/bookings/${bookingId}/cancellations/${cancellationId}`;\n    return this.httpclient.delete(url);\n  }\n}\nCancellationService.ɵfac = function CancellationService_Factory(t) {\n  return new (t || CancellationService)(i0.ɵɵinject(i1.HttpClient));\n};\nCancellationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CancellationService,\n  factory: CancellationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["CancellationService","constructor","httpclient","baseUrl","createCancellation","bookingId","cancellation","url","post","getAllCancellations","get","updateCancellation","cancellationId","put","deleteCancellation","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/coder/project/workspace/angularapp/src/app/cancellation.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CancellationService {\n  private baseUrl = 'http://localhost:8080';\n\n  constructor(private httpclient: HttpClient) { }\n\n  createCancellation(bookingId: number, cancellation: any): Observable<any> {\n    const url = `${this.baseUrl}/bookings/${bookingId}/cancellations`;\n    return this.httpclient.post<any>(url, cancellation);\n  }\n\n  getAllCancellations(bookingId: number): Observable<any[]> {\n    const url = `${this.baseUrl}/bookings/${bookingId}/cancellations`;\n    return this.httpclient.get<any[]>(url);\n  }\n\n  updateCancellation(bookingId: number, cancellationId: number, cancellation: any): Observable<any> {\n    const url = `${this.baseUrl}/bookings/${bookingId}/cancellations/${cancellationId}`;\n    return this.httpclient.put<any>(url, cancellation);\n  }\n\n  deleteCancellation(bookingId: number, cancellationId: number): Observable<any> {\n    const url = `${this.baseUrl}/bookings/${bookingId}/cancellations/${cancellationId}`;\n    return this.httpclient.delete(url);\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAG,uBAAuB;EAEK;EAE9CC,kBAAkBA,CAACC,SAAiB,EAAEC,YAAiB;IACrD,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,aAAaE,SAAS,gBAAgB;IACjE,OAAO,IAAI,CAACH,UAAU,CAACM,IAAI,CAAMD,GAAG,EAAED,YAAY,CAAC;EACrD;EAEAG,mBAAmBA,CAACJ,SAAiB;IACnC,MAAME,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,aAAaE,SAAS,gBAAgB;IACjE,OAAO,IAAI,CAACH,UAAU,CAACQ,GAAG,CAAQH,GAAG,CAAC;EACxC;EAEAI,kBAAkBA,CAACN,SAAiB,EAAEO,cAAsB,EAAEN,YAAiB;IAC7E,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,aAAaE,SAAS,kBAAkBO,cAAc,EAAE;IACnF,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAMN,GAAG,EAAED,YAAY,CAAC;EACpD;EAEAQ,kBAAkBA,CAACT,SAAiB,EAAEO,cAAsB;IAC1D,MAAML,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,aAAaE,SAAS,kBAAkBO,cAAc,EAAE;IACnF,OAAO,IAAI,CAACV,UAAU,CAACa,MAAM,CAACR,GAAG,CAAC;EACpC;;AAvBWP,mBAAmB,C;mBAAnBA,mBAAmB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnBnB,mBAAmB,C;SAAnBA,mBAAmB;EAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}